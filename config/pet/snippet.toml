[[snippets]]
  description = "Fuzzy find (search) neuron by title"
  command = "neuron search -e -d /home/arinal/neuron"
  tag = ["neuron", "note", "zattelkasten", "writing", "documentation"]
  output = ""

[[snippets]]
  description = "Edit i3 window manager config"
  command = "e ~/.files/config/i3/config"
  tag = ["edit", "dotfiles", "config", "i3", "window"]
  output = ""

[[snippets]]
  description = "Edit zshrc config"
  command = "e /home/arinal/.files/zshrc"
  tag = ["edit", "dotfiles", "config", "zshrc", "zshell"]
  output = ""

[[snippets]]
  description = "Edit file manager (ranger) configuration"
  command = "e ~/.files/config/ranger/rc.conf"
  tag = [".files", "edit", "dotfiles", "ranger", "configuration"]
  output = ""

[[snippets]]
  description = "Edit lunarvim config"
  command = "e ~/.config/lvim/config.lua"
  tag = ["edit", "config", "dotfiles", "nvim", "lvim", " lunarvim"]
  output = ""

[[snippets]]
  description = "Edit polybar config"
  command = "e ~/.config/polybar/config"
  tag = ["edit", "config", "dotfiles", "polybar", "topbar", "menu"]
  output = ""

[[snippets]]
  description = "Edit rofi (floating main menu) config"
  command = "e /home/arinal/.files/config/rofi/config.rasi"
  tag = ["edit", "config", "dotfiles", "rofi", "theme", "main", "menu"]
  output = ""

[[snippets]]
  description = "Present a default sample presentation"
  command = "present /home/arinal/sources/python/present/examples/sample.md "
  tag = ["presentation", "power point", "ppt", "demo", "animation"]
  output = ""

[[snippets]]
  description = "Present a coding animation (codeio)"
  command = "present /home/arinal/sources/python/present/examples/codio.md "
  tag = ["presentation", "power point", "coding", "animation", "codeio"]
  output = ""

[[snippets]]
  description = "Edit tmux config"
  command = "e /home/arinal/.files/tmux.conf "
  tag = ["tmux", "edit", "config", "dotfiles"]
  output = ""

[[snippets]]
  description = "Displaying keystroke on screen"
  command = "screenkey"
  tag = ["keyboard", "display", "monitor", "youtuber", "recording"]
  output = ""

[[snippets]]
  description = "Find pacman orphaned package"
  command = "pacman -Qtdq"
  tag = ["package", "arch", "find", "query", "search", "orphan", "clean"]
  output = ""

[[snippets]]
  description = "Find neuron by content"
  command = "neuron search -ea -d /home/arinal/neuron"
  tag = ["note", "edit", "dotfiles", "fuzzy", "find", "content", "all"]
  output = ""

[[snippets]]
  description = "Create new neuron document (taking a new note)"
  command = "neuron new -e -d /home/arinal/neuron"
  tag = ["note", "new", "taking-note"]
  output = ""

[[snippets]]
  description = "Display curlable parrot animation"
  command = "curl parrot.live"
  tag = ["fun", "curlable", "animation", "ascii"]
  output = ""

[[snippets]]
  description = "Display curlable cryptocurrency price summary"
  command = "curl rate.sx "
  tag = ["fun", "curlable", "table", "sheets", "bitcoin", "cryptos", "BTC", "ascii"]
  output = ""

[[snippets]]
  description = "Display curlable one cryptocurrency price chart"
  command = "curl rate.sx/<coin=btc>@<interval=30d>"
  tag = ["curlable", "chart", "sheets", "bitcoin", "cryptos", "BTC", "ascii"]
  output = ""

[[snippets]]
  description = "Shorten the given url using curlable"
  command = "curl -F'shorten=https://<url>' https://0x0.st"
  tag = ["curlable", "url", "short", "bitly"]
  output = ""

[[snippets]]
  description = "Translate the given english word using curlable"
  command = "curl dict://dict.org/d:<word>"
  tag = ["curlable", "dictionary", "translate", "english"]
  output = ""

[[snippets]]
  description = "Show QR code from the given string using curlable"
  command = "curl qrenco.de/<string>"
  tag = ["curlable", "qr", "code", "bar", "fun"]
  output = ""

[[snippets]]
  description = "Git fetch and merge with master"
  command = "git fetch && git merge origin/master"
  tag = ["git", "merge", "master", "branch", "fetch"]
  output = ""

[[snippets]]
  description = "Edit ranger scope file (file handler)"
  command = "e ~/.files/config/ranger/scope.sh"
  tag = ["ranger", "file", "edit", "dotfiles", "scope", "mime"]
  output = ""

[[snippets]]
  description = "GCC cross compile to ARM (Cortex A8)"
  command = "arm-none-eabi-gcc -c -mcpu=<cpu=cortex-a8> <filename=main>.c -o <filename=main>.o"
  tag = ["gcc", "compile", "cross-compile", "arm", "C", "cortex", "A8"]
  output = ""

[[snippets]]
  description = "Cross assemble ARM assembly (Cortex-A8)"
  command = "arm-none-eabi-as -mcpu=<cpu=cortex-a8> <filename=main>.s -o <filename=main>.o"
  tag = ["assembly", "compile", "cross-assemble", "arm", "gas", "cortex", "A8"]
  output = ""

[[snippets]]
  description = "Link a cross compiled ARM object into elf an elf file"
  command = "arm-none-eabi-ld -T <linker-file=main>.ld *.o -o <linker-file=main>.elf "
  tag = ["link", "script", "arm", "ld", "cortex", "A8"]
  output = ""

[[snippets]]
  description = "Obj-copy ARM elf file into executable headless ARM binary"
  command = "arm-none-eabi-objcopy -O binary <filename=main>.elf <filename=main>.bin"
  tag = ["objcopy", "stripped", "binaty", "arm", "cortex", "A8"]
  output = ""

[[snippets]]
  description = "Read binary ELF (Executable Linux Format)"
  command = "readelf -a <filename>"
  tag = ["binary", "elf", "header", "hexa", "format"]
  output = ""

[[snippets]]
  description = "GCC a C file into debuggable executable"
  command = "gcc -g <filename>.c -o <filename>"
  tag = ["gcc", "elf", "debug", "symbol", "executable"]
  output = ""

[[snippets]]
  description = "Edit ranger rifle configuration (default file opener)"
  command = "e ~/.files/config/ranger/rifle.conf"
  tag = ["edit", "nvim", "config", "rifle", "ranger", "dotfiles"]
  output = ""

[[snippets]]
  description = "Display keystroke on the screen"
  command = "screenkey --position fixed --geometry 628x160+5770+1280 --opacity 0.1\\n"
  tag = ["display", "monitor", "keyboard", "keystroke", "keypress"]
  output = ""

[[snippets]]
  description = "Display list of directory in path environment variable"
  command = "echo ${PATH} | tr ':' '\\n' "
  tag = ["echo", "list", "environment", "variable", "PATH", "path", "show"]
  output = ""

[[snippets]]
  description = "Edit zshenv config file"
  command = "e /home/arinal/.files/zshenv"
  tag = ["edit", "dotfiles", ".files", "zshenv", "zsh", "config"]
  output = ""

[[snippets]]
  description = "Create a new react js project"
  command = "npx create-react-app <name>"
  tag = ["init", "project", "js", "ts", "javascript", "web", "frontend", "react"]
  output = ""

[[snippets]]
  description = "Display current internet speed/bandwidth in Mbps"
  command = "speedtest"
  tag = ["internet", "speed", "ookla", "mbps", "bandwidth"]
  output = ""

[[snippets]]
  description = "Edit pet snippet file"
  command = "e ~/.files/config/pet/snippet.toml "
  tag = ["snippet", "pet", "explorability"]
  output = ""

[[snippets]]
  description = "Edit nix home manager file"
  command = "e ~/.config/nixpkgs/home.nix"
  tag = ["edit", "nix", "package", "install", "program", "application"]
  output = ""

[[snippets]]
  description = "Display who listen (or use) on TCP port number"
  command = "lsof -i TCP:<port>"
  tag = ["lsof", "file", "listen", "tcp", "port"]
  output = ""

[[snippets]]
  description = "View pull request of current branch on Github website"
  command = "gh pr view --web"
  tag = ["github", "web", "pr", "branch", "view"]
  output = ""

[[snippets]]
  description = "Edit Powerlevel10k configuration"
  command = "e ~/.p10k.zsh"
  tag = ["prompt", "unicode", "powerline", "command", "powerlevel10k"]
  output = ""

[[snippets]]
  description = "View github repository on browser"
  command = "gh repo view --web"
  tag = ["git", "README.md", "github", "gh", "browser"]
  output = ""

[[snippets]]
  description = "Install node packages using npm and write to package.json"
  command = "npm install --save-dev <packages>"
  tag = ["npm", "package.json", "--save-dev", "js", "ts", "node"]
  output = ""

[[snippets]]
  description = "Install package(s) from pacman"
  command = "sudo pacman --sync <name>"
  tag = ["install", "arch", "package", "pacman", "paci"]
  output = ""

[[snippets]]
  description = "Update archlinux system with pacman"
  command = "sudo pacman --sync --refresh --sysupgrade"
  tag = ["system", "update", "kernel", "version", "install", "arch", "package", "pacman", "pacU"]
  output = ""

[[snippets]]
  description = "Open Zoom meeting for daily standup"
  command = "firefox --new-window \"https://disney.zoom.us/j/6306028504?pwd=QmF4TDIrOEtoR2M1UmtWZ0FxREJRUT09\""
  tag = ["zoom", "sarah", "daily", "standup", "meeting", "scrum"]
  output = ""

[[snippets]]
  description = "Uninstall a package using pacman"
  command = "sudo pacman --remove --recursive <name>"
  tag = ["uninstall", "arch", "package", "pacman", "remove", "delete", "pacx"]
  output = ""

[[snippets]]
  description = "Neuron start neuron web site in 8080"
  command = "neuron gen -wS -d /home/arinal/neuron"
  tag = ["zettelkasten", "website", "http", "document", "neuron", "localhost", "pacx"]
  output = ""

[[snippets]]
  description = "Get ssm NON_HULUSOLD_API_KEY parameter from AWS"
  command = "aws ssm get-parameters --names /mercury/<env=dev>/subscription-func-test/NON_HULUSOLD_API_KEY --with-decryption"
  tag = ["aws", "ssm", "hulu", "api", "key", "decrypt"]
  output = ""

[[snippets]]
  description = "File size analyzer"
  command = "ncdu"
  tag = ["disk", "analyze", "space", "giga", "bytes", "current", "folder"]
  output = ""

[[snippets]]
  description = "Compile wat to wasm"
  command = "wat2wasm <name>.wat -o <name>.wasm"
  tag = ["wat", "wasm", "binary", "compile"]
  output = ""

[[snippets]]
  description = "Analyze wasm binary object"
  command = "wasm-objdump -x <name>.wasm"
  tag = ["wat", "wasm", "objdump", "binary"]
  output = ""

[[snippets]]
  description = "Host a static python web server in local directory"
  command = "python -m http.server"
  tag = ["python", "file", "server", "http", "directory"]
  output = ""

[[snippets]]
  description = "Edit alacritty config"
  command = "e /home/arinal/.files/config/alacritty/alacritty.yml "
  tag = ["alacritty", "config", "edit", "vim"]
  output = ""

[[snippets]]
  description = "Get json bitcoin transaction"
  command = "http https://blockchain.info/tx/<address>?format=json | jless"
  tag = ["btc", "json", "transaction", "crypto", "blockchain"]
  output = ""
